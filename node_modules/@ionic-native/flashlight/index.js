var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Injectable } from '@angular/core';
import { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';
/**
 * @name Flashlight
 * @description This plugin allows you to switch the flashlight / torch of the device on and off.
 *
 * Requires Cordova plugin: `cordova-plugin-flashlight`. For more info, please see the [Flashlight plugin docs](https://github.com/EddyVerbruggen/Flashlight-PhoneGap-Plugin).
 *
 * @usage
 * ```typescript
 * import { Flashlight } from '@ionic-native/flashlight';
 *
 * constructor(private flashlight: Flashlight) { }
 *
 * ...
 *
 * this.flashlight.switchOn();
 *
 * ```
 */
var Flashlight = (function (_super) {
    __extends(Flashlight, _super);
    function Flashlight() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Checks if the flashlight is available
     * @returns {Promise<boolean>} Returns a promise that resolves with a boolean stating if the flashlight is available.
     */
    /**
       * Checks if the flashlight is available
       * @returns {Promise<boolean>} Returns a promise that resolves with a boolean stating if the flashlight is available.
       */
    Flashlight.prototype.available = /**
       * Checks if the flashlight is available
       * @returns {Promise<boolean>} Returns a promise that resolves with a boolean stating if the flashlight is available.
       */
    function () { return; };
    /**
     * Switches the flashlight on
     * @returns {Promise<boolean>}
     */
    /**
       * Switches the flashlight on
       * @returns {Promise<boolean>}
       */
    Flashlight.prototype.switchOn = /**
       * Switches the flashlight on
       * @returns {Promise<boolean>}
       */
    function () { return; };
    /**
     * Switches the flashlight off
     * @returns {Promise<boolean>}
     */
    /**
       * Switches the flashlight off
       * @returns {Promise<boolean>}
       */
    Flashlight.prototype.switchOff = /**
       * Switches the flashlight off
       * @returns {Promise<boolean>}
       */
    function () { return; };
    /**
     * Toggles the flashlight
     * @returns {Promise<any>}
     */
    /**
       * Toggles the flashlight
       * @returns {Promise<any>}
       */
    Flashlight.prototype.toggle = /**
       * Toggles the flashlight
       * @returns {Promise<any>}
       */
    function () { return; };
    /**
     * Checks if the flashlight is turned on.
     * @returns {boolean}
     */
    /**
       * Checks if the flashlight is turned on.
       * @returns {boolean}
       */
    Flashlight.prototype.isSwitchedOn = /**
       * Checks if the flashlight is turned on.
       * @returns {boolean}
       */
    function () { return; };
    Flashlight.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    Flashlight.ctorParameters = function () { return []; };
    __decorate([
        Cordova(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", Promise)
    ], Flashlight.prototype, "available", null);
    __decorate([
        Cordova(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", Promise)
    ], Flashlight.prototype, "switchOn", null);
    __decorate([
        Cordova(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", Promise)
    ], Flashlight.prototype, "switchOff", null);
    __decorate([
        Cordova(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", Promise)
    ], Flashlight.prototype, "toggle", null);
    __decorate([
        Cordova({
            sync: true
        }),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", Boolean)
    ], Flashlight.prototype, "isSwitchedOn", null);
    /**
     * @name Flashlight
     * @description This plugin allows you to switch the flashlight / torch of the device on and off.
     *
     * Requires Cordova plugin: `cordova-plugin-flashlight`. For more info, please see the [Flashlight plugin docs](https://github.com/EddyVerbruggen/Flashlight-PhoneGap-Plugin).
     *
     * @usage
     * ```typescript
     * import { Flashlight } from '@ionic-native/flashlight';
     *
     * constructor(private flashlight: Flashlight) { }
     *
     * ...
     *
     * this.flashlight.switchOn();
     *
     * ```
     */
    Flashlight = __decorate([
        Plugin({
            pluginName: 'Flashlight',
            plugin: 'cordova-plugin-flashlight',
            pluginRef: 'window.plugins.flashlight',
            repo: 'https://github.com/EddyVerbruggen/Flashlight-PhoneGap-Plugin',
            platforms: ['Android', 'iOS', 'Windows Phone 8']
        })
    ], Flashlight);
    return Flashlight;
}(IonicNativePlugin));
export { Flashlight };
//# sourceMappingURL=index.js.map